buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.google.protobuf:protobuf-gradle-plugin:0.8.5")
    }
}
allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    ext {
        grpcVersion = '1.18.0'
        protobufVersion = '3.6.1'
        protocVersion = '3.6.1'
    }

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/spring' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        mavenCentral()
    }

    group = 'com.log'
    version = '1.0'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}
configure([project(":fileservice"), project(":uiapi")]) {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'application'

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2'
        }
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.springframework.boot:spring-boot-starter-webflux')
        compile('org.springframework.boot:spring-boot-starter-actuator')
        compile "org.springframework.boot:spring-boot-configuration-processor"
        // eureka
        compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
        compile('org.springframework.cloud:spring-cloud-starter-eureka:1.4.6.RELEASE')
        // grpc starter
        compile 'io.github.lognet:grpc-spring-boot-starter:3.2.0'
        // be compatible for java 9+
        compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
        // common
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
        compile group: 'commons-io', name: 'commons-io', version: '2.6'
        //test
        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile('io.projectreactor:reactor-test')
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        //subproject
        implementation project(":common")
        //lombok
        annotationProcessor("org.projectlombok:lombok")
        compileOnly("org.projectlombok:lombok")
    }
    def projectName = it.name
    task copyInstallationFiles(type: Copy) {
        description = 'Copy file service installation files'
        from('build/bootScripts') {
            into "bin"
        }
        from('prod') {
            into "bin"
        }
        from('build/libs') {
            into "lib"
        }
        into rootProject.projectDir.path + "/install/" + projectName
    }
    build.finalizedBy(copyInstallationFiles)
}